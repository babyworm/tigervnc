add_test([=[ShortcutHandler.noModifiers]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.noModifiers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.noModifiers]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleDualArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleDualArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleDualArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleRightShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleRightShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleRightShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleDualShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleDualShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleDualShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleShortcutReordered]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleShortcutReordered]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleShortcutReordered]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleDualShortcutReordered]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleDualShortcutReordered]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleDualShortcutReordered]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleShortcutRepeated]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleShortcutRepeated]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleShortcutRepeated]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleShortcutMultipleKeys]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleShortcutMultipleKeys]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleShortcutMultipleKeys]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleWedgeNormal]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleWedgeNormal]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleWedgeNormal]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleWedgeModifier]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleWedgeModifier]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleWedgeModifier]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleWedgeModifierArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleWedgeModifierArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleWedgeModifierArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleWedgeModifierFiring]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleWedgeModifierFiring]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleWedgeModifierFiring]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.singleUnwedge]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.singleUnwedge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.singleUnwedge]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiRearmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiRearmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiRearmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiFailedArm]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiFailedArm]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiFailedArm]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiDualArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiDualArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiDualArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiRightShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiRightShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiRightShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiDualShortcut]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiDualShortcut]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiDualShortcut]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiShortcutReordered]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiShortcutReordered]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiShortcutReordered]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiDualShortcutReordered]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiDualShortcutReordered]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiDualShortcutReordered]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiShortcutRepeated]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiShortcutRepeated]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiShortcutRepeated]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiShortcutMultipleKeys]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiShortcutMultipleKeys]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiShortcutMultipleKeys]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeNormal]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeNormal]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeNormal]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeModifier]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeModifier]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeModifier]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeArming]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeArming]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeArming]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeModifierArming]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeModifierArming]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeModifierArming]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeModifierArmed]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeModifierArmed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeModifierArmed]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiWedgeModifierFiring]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiWedgeModifierFiring]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiWedgeModifierFiring]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ShortcutHandler.multiUnwedge]=]  /app/build/tests/unit/shortcuthandler [==[--gtest_filter=ShortcutHandler.multiUnwedge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ShortcutHandler.multiUnwedge]=]  PROPERTIES WORKING_DIRECTORY /app/build/tests/unit SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  shortcuthandler_TESTS ShortcutHandler.noModifiers ShortcutHandler.singleArmed ShortcutHandler.singleDualArmed ShortcutHandler.singleShortcut ShortcutHandler.singleRightShortcut ShortcutHandler.singleDualShortcut ShortcutHandler.singleShortcutReordered ShortcutHandler.singleDualShortcutReordered ShortcutHandler.singleShortcutRepeated ShortcutHandler.singleShortcutMultipleKeys ShortcutHandler.singleWedgeNormal ShortcutHandler.singleWedgeModifier ShortcutHandler.singleWedgeModifierArmed ShortcutHandler.singleWedgeModifierFiring ShortcutHandler.singleUnwedge ShortcutHandler.multiArmed ShortcutHandler.multiRearmed ShortcutHandler.multiFailedArm ShortcutHandler.multiDualArmed ShortcutHandler.multiShortcut ShortcutHandler.multiRightShortcut ShortcutHandler.multiDualShortcut ShortcutHandler.multiShortcutReordered ShortcutHandler.multiDualShortcutReordered ShortcutHandler.multiShortcutRepeated ShortcutHandler.multiShortcutMultipleKeys ShortcutHandler.multiWedgeNormal ShortcutHandler.multiWedgeModifier ShortcutHandler.multiWedgeArming ShortcutHandler.multiWedgeModifierArming ShortcutHandler.multiWedgeModifierArmed ShortcutHandler.multiWedgeModifierFiring ShortcutHandler.multiUnwedge)
